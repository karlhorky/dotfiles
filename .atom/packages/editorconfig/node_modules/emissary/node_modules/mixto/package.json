{
  "name": "mixto",
  "version": "1.0.0",
  "description": "A mixin superclass. Its subclasses have `.extend` and `.includeInto` methods to mix behavior into other objects and classes.",
  "main": "lib/mixin",
  "scripts": {
    "prepublish": "grunt clean coffee lint",
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/atom/mixto"
  },
  "keywords": [
    "mixin",
    "trait"
  ],
  "bugs": {
    "url": "https://github.com/atom/mixto/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/atom/mixto/raw/master/LICENSE.md"
    }
  ],
  "devDependencies": {
    "coffee-script": "~1.6.3",
    "jasmine-focused": "~0.19.0",
    "grunt-contrib-coffee": "~0.7.0",
    "grunt-cli": "~0.1.8",
    "grunt": "~0.4.1",
    "grunt-shell": "~0.2.2",
    "grunt-coffeelint": "0.0.6",
    "rimraf": "~2.2.2"
  },
  "author": {
    "name": "Nathan Sobo"
  },
  "readme": "# Mixto: A simple mixin superclass [![Build Status](https://travis-ci.org/atom/mixto.png?branch=master)](https://travis-ci.org/atom/mixto)\n\nTo create a mixin, subclass mixto:\n\n```coffee\nMixin = require 'mixto'\n\nclass MyMixin extends Mixin\n  @classMethod: -> console.log(\"foo\")\n  instanceMethod: -> console.log(\"bar\")\n```\n\nThen mix into classes with `.includeInto`:\n\n```coffee\nclass MyClass\n  MyMixin.includeInto(this)\n  \nMyClass.classMethod()\n(new MyClass).instanceMethod()\n```\n\nOr extend individual objects with `.extend`:\n\n```coffee-script\nmyObject = {a: 1, b: 2}\nMyMixin.extend(myObject)\nmyObject.instanceMethod()\n```\n\nOr build standalone instances of your 'mixin':\n\n```\nstandalone = new MyMixin\nstandalone.instanceMethod()\n```\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/atom/mixto",
  "_id": "mixto@1.0.0",
  "_from": "mixto@1.x"
}
